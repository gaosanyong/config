# self-defined snippets

snippet unionfind
    class UnionFind:
        def __init__(self, n: int):
            self.parent = list(range(n))
            self.rank = [1] * n

        def find(self, p: int) -> int:
            if p != self.parent[p]:
                self.parent[p] = self.find(self.parent[p])
            return self.parent[p]

        def union(self, p: int, q: int) -> bool:
            prt, qrt = self.find(p), self.find(q)
            if prt == qrt: return False
            if self.rank[prt] > self.rank[qrt]: prt, qrt = qrt, prt 
            self.parent[prt] = qrt
            self.rank[qrt] += self.rank[prt]
            return True


snippet contest
	#!/usr/bin/python3

	from bisect import *
	from collections import *
	from copy import *
	from functools import *
	from heapq import *
	from itertools import *
	from math import * 
	from operator import *
	from re import *
	from string import *
	from typing import *

	class Contest:
		"""Programming contest"""

		def __init__(self):
			"""Write your code here."""
			${0}

	if __name__ == "__main__": 
		sol = Contest()
